ALGORITHM read_sentence
VAR
    // Declare variables
    sentence, vowel: STRING;
    length, wordcount, vowelcount: INTEGER;
    words: ARRAY[] OF STRING;

BEGIN
    // Initialize variables
    sentence :='';
    length := 0;
    wordcount := 0;
    vowelcount := 0;
    vowel := "aeiouAEIOU";

    // Iterate through each character in the sentence to find the length of the sentence
    FOR character IN sentence
        // Increment length counter
        length := length + 1;

    // Remove leading and trailing spaces
    sentence := trim(sentence);

    // Initialize a variable to store the current word
    STRING currentWord := "";

    // Iterate through each character in the sentence
    FOR character IN sentence
        // Check if the character is a letter or a space
        IF character IN ("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ ")
            // If it's a letter, add it to the current word
            currentWord := currentWord + character;
        ELSE
            // If it's not a letter, process the current word
            IF currentWord is not empty
                // Increment the word count
                wordcount := wordcount + 1;

        // Iterate through each character in the word to count vowels
    
        FOR char IN currentWord DO
        // Check if the lowercase version of the character is a vowel
            IF LowerCase(char) IN vowel THEN
            // Increment the vowel count
            vowelcount := vowelcount + 1;
            END IF;
        END FOR;


                // Reset the current word for the next iteration
                currentWord := "";
            END IF;
        END IF;
    END FOR;

    // Check if there's a last word after the loop
    IF currentWord is not empty
        wordcount := wordcount + 1;

        // Iterate through each character in the word to count vowels
        FOR char IN currentWord DO
            // Check if the lowercase version of the character is a vowel
            IF LowerCase(char) IN vowel
                // Increment the vowel count
                vowelcount := vowelcount + 1;
            ELSE
                // Check if the uppercase version of the character is a vowel
                IF UpperCase(char) IN vowel
                    // Increment the vowel count
                    vowelcount := vowelcount + 1;
                END IF;
            END IF;
        END FOR;
    END IF;

    // OUTPUT results
    OUTPUT length, wordcount, vowelcount;
END
